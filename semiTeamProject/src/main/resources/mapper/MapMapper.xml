<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.campus.myapp.dao.MapDAO">

    <insert id="addplace">
        insert into store (place_name, phone, road_address_name, address_name, id)
        values(#{place_name}, #{phone}, #{road_address_name}, #{address_name}, #{id})
    </insert>

	<select id="myReviewListAll" resultType="com.campus.myapp.vo.ReviewVO">
		select r.star, date_format(r.writedate,' %y-%m-%d') writedate, date_format(r.modifydate,' %y-%m-%d') modifydate, r.content, r.reviewimg, s.place_name, r.reviewno 
		from review r join store s on r.id=s.id
		where r.userid=#{param1} order by reviewno desc
	</select>
	
	<delete id="myreviewDeleteOk">
		delete from review where reviewno=#{param1}
	</delete>
	
	<select id="reviewListAll" resultType="com.campus.myapp.vo.ReviewVO">
		select reviewno, userid, date_format(writedate,' %y-%m-%d') writedate, date_format(modifydate,' %y-%m-%d') modifydate, star, content, id
		from review 
		<if	test='searchword != null'>
			where userid like '%${searchword}%'
		</if>
		 order by writedate desc
	</select>
	<select id="getStore" resultType="com.campus.myapp.vo.StoreVO">
		select * from store where id=#{param1}
	</select>

		
    <select id="avgstar" resultType="com.campus.myapp.vo.StoreVO">
		select id,count(id) as 리뷰갯수 , round(avg(star),2) as 평균별점 from review group by id;
	</select>
	
	<select id="reviewcnt" resultType="com.campus.myapp.vo.StoreVO">
		select id,count(id) as reviewcnt from review where id=#{param1};		
	</select>
	
</mapper>